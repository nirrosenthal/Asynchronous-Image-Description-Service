version: '3.8'

services:
  # Redis service
  redis:
    image: redis:7-alpine
    container_name: image-service-redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  # FastAPI application (Development with hot reload)
  web:
    build: .
    container_name: image-service-web
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - .:/app
    command: uvicorn app.main:app --host ${WEB_HOST} --port ${WEB_PORT} --reload
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; socket.socket().connect(('${WEB_HOST}', ${WEB_PORT}))"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  # Celery worker
  worker:
    build: .
    container_name: image-service-worker
    command: celery -A app.tasks worker --loglevel=info --concurrency=${CELERY_WORKERS}
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data: 